<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2021-04-29T15:11:42+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">HwaLi</title><subtitle>Personal study notes</subtitle><author><name>Hwa Li</name></author><entry><title type="html">ArrayList的扩容机制</title><link href="http://localhost:4000/2021/04/20/ArrayList-resize" rel="alternate" type="text/html" title="ArrayList的扩容机制" /><published>2021-04-20T00:00:00+08:00</published><updated>2021-04-20T00:00:00+08:00</updated><id>http://localhost:4000/2021/04/20/ArrayList-resize</id><content type="html" xml:base="http://localhost:4000/2021/04/20/ArrayList-resize">&lt;p&gt;###Arraylist成员变量&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//序列化ID
private static final long serialVersionUID = 8683452581122892189L;

//数组的默认初始容量
private static final int DEFAULT_CAPACITY = 10;

//共用的空数组实例对象被用作空实例
private static final Object[] EMPTY_ELEMENTDATA = {};

//共用的空数组实例对象被用作默认size的空实例，与EMPTY_ELEMENTDATA 的区别是第一个元素被添加会知道扩容到10
private static final Object[] DEFAULTCAPACITY_EMPTY_ELEMENTDATA = {};

//数组元素被存储在数组缓存。ArrayList的容量是array buffer 的长度。
transient Object[] elementData;

//ArrayList 的 size （它包含的元素的个数）
private int size;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;###3种new方式&lt;/p&gt;

&lt;p&gt;1.构造一个初始容量为10的空list
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;public ArrayList()&lt;/code&gt;
2.构造一个自定初始容量的空list
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;public ArrayList(int initialCapacity)&lt;/code&gt;
3.通过传入集合数组构造一个带元素的list
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;public ArrayList(Collection&amp;lt;? extends E&amp;gt; c) &lt;/code&gt;&lt;/p&gt;

&lt;p&gt;###add()方法&lt;/p&gt;

&lt;p&gt;以add(E e)为例：
在添加e到ArrayList之前，先检查容量&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;public boolean add(E e) {
        ensureCapacityInternal(size + 1);  // Increments modCount!!
        elementData[size++] = e;
        return true;
    }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;minCapacity=size+1为当前数组要求的最小容量&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;private void ensureCapacityInternal(int minCapacity) {
        ensureExplicitCapacity(calculateCapacity(elementData, minCapacity));
    }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;若elementData指向DEFAULTCAPACITY_EMPTY_ELEMENTDATA，说明是无参构造创建的，没有自定初始容量，取minCapacity与DEFAULT_CAPACITY最大值
否则返回mincapacity&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; private static int calculateCapacity(Object[] elementData, int minCapacity) {
        if (elementData == DEFAULTCAPACITY_EMPTY_ELEMENTDATA) {
            return Math.max(DEFAULT_CAPACITY, minCapacity);
        }
        return minCapacity;
    }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;modCount 是关于线程安全 minCapacity大于数组的长度则扩容&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;private void ensureExplicitCapacity(int minCapacity) {
        modCount++;
        if (minCapacity - elementData.length &amp;gt; 0)
            grow(minCapacity);
    }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;进行扩容，数组长度扩容为原来的1.5倍，若新数组容量比当前要求的最小容量还要小，则新数组容量newCapacity 为minCapacity；
若比最大允许分配的数组长度还大，minCapacity说明内存溢出，三目运算符取其最大值为newCapacity
最后将原来数组的元素拷入新数组，用elementData指向&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; private void grow(int minCapacity) {
        int oldCapacity = elementData.length;
        int newCapacity = oldCapacity + (oldCapacity &amp;gt;&amp;gt; 1);
        if (newCapacity - minCapacity &amp;lt; 0)
            newCapacity = minCapacity;
        if (newCapacity - MAX_ARRAY_SIZE &amp;gt; 0)
            newCapacity = hugeCapacity(minCapacity);
        elementData = Arrays.copyOf(elementData, newCapacity);
    }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Hwa Li</name></author><category term="Java" /><category term="Jekyll" /><category term="Github" /><category term="Github Pages" /><category term="Blog" /><summary type="html">通过源码来分析。</summary></entry><entry><title type="html">Welcome to Jekyll Paper!</title><link href="http://localhost:4000/2018/02/11/welcome-to-jekyll" rel="alternate" type="text/html" title="Welcome to Jekyll Paper!" /><published>2018-02-11T00:00:00+08:00</published><updated>2018-09-20T00:00:00+08:00</updated><id>http://localhost:4000/2018/02/11/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/2018/02/11/welcome-to-jekyll">&lt;p&gt;Jekyll Paper is a Jekyll theme, it is designed to helping you to create your own blog by the easiest way. Now, you can learn how to use this blog by this post.&lt;/p&gt;

&lt;p&gt;You’ll find this post in your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and reload the page to see your changes. You can edit this post on Github or your local repository copy.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.md&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;stdio.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello World!&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// =&amp;gt; prints 'Hello World!' to STDOUT.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://github.com/ghosind/Jekyll-Paper/wiki&quot;&gt;Jekyll Paper docs&lt;/a&gt; or &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. If you have questions or suggestions, you can create an issue to asking them on &lt;a href=&quot;https://github.com/ghosind/Jekyll-Paper/issues&quot;&gt;Jekyll Paper Issues&lt;/a&gt; or &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name>Hwa Li</name></author><category term="Jekyll Paper" /><category term="Getting Start" /><summary type="html">Jekyll Paper is a Jekyll theme, it is designed to helping you to create your own blog by the easiest way. Now, you can learn how to use this blog by this post.</summary></entry></feed>